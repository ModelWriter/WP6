h1. Sirius Architecture and Concepts

{toc:style=disc|minLevel=2|maxLevel=3}

h2(#introduction). Introduction

This document presents an overview of the internal architecture of Sirius, and the main concepts and APIs.

Sirius relies heavily on the Eclipse platform, and reuses (and extends) many of the standard Eclipse frameworks, in particular the Eclipse Modeling Platform. This document assumes that you are already familiar with these frameworks and libraries, in particular [EMF{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={506, 2753, 21121, 21915, 21917, 26301, 28191, 26048, 36606, 39064, 39395, 40394}}] and [EMF{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={506, 2753, 21121, 21915, 21917, 26301, 28191, 26048, 36606, 39064, 39395, 40394}}] [Transaction{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={517, 558, 699, 1392, 1492, 1498, 1538, 1895, 21328, 21360, 21395, 21865, 22211, 22212, 22213, 22588, 22589, 22590, 22591, 23089, 24010, 24712, 26459, 26460, 27538, 36178, 36180, 36183, 36327, 36379, 36413, 36438, 36716, 39028, 39123, 39195, 39217, 39761, 40273, 40274, 40311}}], [GEF{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={24000, 36609, 36635, 39974, 39997}}] and [MW:/EcoreConcepts-line={},GMF{MW:/JavaConcepts-line={21667, 21668, 22111, 22112, 22162, 22189, 22190, 22196, 22197, 22198, 22199, 22200, 22201, 22202, 22203, 22206, 22207, 22208, 22209, 22241, 22242, 22243, 22296, 22297, 22298, 22331, 22396, 22404, 22408, 22426, 22436, 23257, 23258, 23259, 23260, 24304, 24342, 24343, 24346, 24374, 24439, 24446, 24929, 25890, 25892, 25895, 25900, 26270, 26316, 27278, 27704, 27705, 27724, 27732, 36619, 39998}}}] for [diagrams{MW:/JavaConcepts-line={522, 1327, 2069, 2110, 3568, 3596, 3598, 3600, 3601, 3602, 3603, 3604, 3624, 3625, 3626, 3638, 3639, 3640},MW:/EcoreConcepts-line={119, 120, 121, 122, 139, 140, 143, 171, 182, 286, 326}}]. Refer to these frameworks' own documentation for more details about them.

h2(#session). [Sessions{MW:/EcoreConcepts-line={91,99,100},MW:/JavaConcepts-line={TODO}}]

The central concept of Sirius's API is the [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]. In Sirius, all data is stored in [EMF{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={506, 2753, 21121, 21915, 21917, 26301, 28191, 26048, 36606, 39064, 39395, 40394}}] models: the [[semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] models{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] themselves obviously, but also the [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] ([diagrams{MW:/JavaConcepts-line={522, 1327, 2069, 2110, 3568, 3596, 3598, 3600, 3601, 3602, 3603, 3604, 3624, 3625, 3626, 3638, 3639, 3640},MW:/EcoreConcepts-line={119, 120, 121, 122, 139, 140, 143, 171, 182, 286, 326}}], [tables{MW:/EcoreConcepts-line={419, 420, 424, 425, 426, 451, 460, 461},MW:/JavaConcepts-line={TODO}}]) and the [viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] configuration (the _[[Viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] Specification Models{MW:/EcoreConcepts-line={33, 50, 109},MW:/JavaConcepts-line={TODO}}]_). A session is a wrapper around a _[Transactional Editing Domain{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={517, 558, 699, 1392, 1492, 1895, 23089, 24010, 24712, 26458, 26460, 27538, 36178, 36183, 36327, 36379, 36413, 36438, 36716, 39028, 39123, 39195, 39217, 39761, 40273, 40274, 40311}}]_ and its _[[Resource{MW:/EcoreConcepts-line={96, 97, 101, 105},MW:/JavaConcepts-line={TODO}}] Set{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_. It ensures the consistency of the models inside the editing domain, from the platform's point of view; for example it makes sure the representation [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}] correctly reference all the [[semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] models{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] they need to in order to handle the [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] in the [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]. The [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] also provides high-level, Sirius-specific [services{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] through its own APIs and support classes and interfaces.

In the standard UI, each _[Modeling [project{MW:/EcoreConcepts-line={107},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_  corresponds to exactly one [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}], and each [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] contains its own _[Editing Domain{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_ and _[[Resource{MW:/EcoreConcepts-line={96, 97, 101, 105},MW:/JavaConcepts-line={TODO}}] Set{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_. This means that [sessions{MW:/EcoreConcepts-line={91, 99, 100},MW:/JavaConcepts-line={TODO}}] (and thus modeling projects) are isolated from each other.

The _[[representation{MW:/EcoreConcepts-line={49, 53, 54, 55, 58, 62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_ ([@*.aird@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}]) can be though as the serialized form of a [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}], and symmetrically a [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] is the runtime incarnation of a [[representation{MW:/EcoreConcepts-line={49, 53, 54, 55, 58, 62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] file{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] (or more precisely of the unique top-level [[representation{MW:/EcoreConcepts-line={49, 53, 54, 55, 58, 62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] file{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] in a modeling [project{MW:/EcoreConcepts-line={107},MW:/JavaConcepts-line={TODO}}]).

A [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}], inside its [[resource{MW:/EcoreConcepts-line={96, 97, 101, 105},MW:/JavaConcepts-line={TODO}}] set{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}], contains three kinds of [resources{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]:
* the _[[semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] resources{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_, which contain the user's [semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}];
* the _[[representation{MW:/EcoreConcepts-line={49, 53, 54, 55, 58, 62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] resources{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_, which correspond to the [@aird@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] file(s), and contain [representation{MW:/EcoreConcepts-line={49, 53, 54, 55, 58, 62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] data (e.g. [diagrams{MW:/JavaConcepts-line={522, 1327, 2069, 2110, 3568, 3596, 3598, 3600, 3601, 3602, 3603, 3604, 3624, 3625, 3626, 3638, 3639, 3640},MW:/EcoreConcepts-line={119, 120, 121, 122, 139, 140, 143, 171, 182, 286, 326}}]);
* the _[[viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] Specification Models{MW:/EcoreConcepts-line={33, 50, 109},MW:/JavaConcepts-line={TODO}}]_ which contain all the [viewpoints{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] used by the [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] inside the [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]. These are the [@aird@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}], and are typically loaded from installed plug-in instead of from the workspace (except when using the _[dynamic mode{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_ to develop [viewpoints{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]).

The [@SessionManager@{MW:/EcoreConcepts-line={99},MW:/JavaConcepts-line={TODO}}] is a global object which references all the [sessions{MW:/EcoreConcepts-line={91, 99, 100},MW:/JavaConcepts-line={TODO}}]  currently opened in the system. It can also be used to find which [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] is responsible for a given [[semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] element{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] . This is very important because many Sirius APIs require that you provide a [[@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] parameter{MW:/EcoreConcepts-line={99},MW:/JavaConcepts-line={TODO}}]. If what you have is an element from a user [semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}], you can use [@[SessionManager{MW:/EcoreConcepts-line={99},MW:/JavaConcepts-line={TODO}}].INSTANCE.getSession(theSemanticElement)@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] to find in which of  the opened [session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}], if any, this object is loaded. Note that this method can be relatively costly, so do not call it in tight loops to avoid hurting performance.

To create a [Session{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] programmatically:

bc. 
URI sessionResourceURI = URI.createPlatformResourceURI("/Project/archi.aird", true);
Session createdSession = [SessionManager{MW:/EcoreConcepts-line={99},MW:/JavaConcepts-line={TODO}}].INSTANCE.getSession(sessionResourceURI);
createdSession.open();

The [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]  API provides several methods to manage the different kind of resources it contains: finding all the _[semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] resources_ and adding new ones, finding about all the referenced session resources (all the secondary [@*.aird@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}] which are part of the same session), etc. Refer to the [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] interface's JavaDoc for details.

The [@Session.getInterpreter()@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] method can be used to obtain an [@IInterpreter@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] properly configured to query the models in that session. The interpreter it returns will handle [expression{MW:/EcoreConcepts-line={17, 211, 267, 404},MW:/JavaConcepts-line={TODO}}] from any of the supported query languages, and you can use it to run your own queries (see the [@IInterpreter@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] API).

Another interesting method in [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] is [@Session.getEventBroker()@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] . It returns a [@SessionEventBroker@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] object, which can be used to add trigger actions that will be performed whenever a change in the session's [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] occurs. See [@SessionEventBroker@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] and [@ModelChangeTrigger@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] for details.

When you are finished working with a session, you must [@Session.getEventBroker()@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] it. This will unload all the models in its [resource{MW:/EcoreConcepts-line={96, 97, 101, 105},MW:/JavaConcepts-line={TODO}}] set and free the corresponding memory. After a session has been close it can not be reopened, but you can open a new one on the same [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}] if needed.

h3(#ted). [Transactional Editing Domain{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={517, 558, 699, 1392, 1492, 1895, 23089, 24010, 24712, 26458, 26460, 27538, 36178, 36183, 36327, 36379, 36413, 36438, 36716, 39028, 39123, 39195, 39217, 39761, 40273, 40274, 40311}}]

The editing domain associated to each session is an EMFT _[Transactional Editing Domain{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={517, 558, 699, 1392, 1492, 1895, 23089, 24010, 24712, 26458, 26460, 27538, 36178, 36183, 36327, 36379, 36413, 36438, 36716, 39028, 39123, 39195, 39217, 39761, 40273, 40274, 40311}}]_. In addition to basic undo/redo, it supports advanced features like atomicity and pre- and [[post{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={367, 369, 370, 372, 373, 385, 492, 748, 1075, 1087, 1097, 1103, 1113, 1130, 1396, 1496, 1534, 1548, 2227, 5197, 5202,  5216, 5228, 16932, 19620, 19621, 19626, 19632, 19638, 21022, 21098, 21108, 21345, 21523, 21979, 21984, 22007, 22024, 22047, 22399, 22439, 23027, 23028, 23032, 23033, 24371, 25936, 25942, 26112, 26650, 32468, 36384, 36671, 36672, 36679, 39220, 39594, 40362, 40366, 40617}}]-commit{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={1396, 1496, 1534, 1548, 2227, 21108, 23027, 23028, 23032, 23033, 26650, 36384, 39220, 39594, 40362, 40366, 40617}}] [listeners{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={547, 584, 617, 687, 885, 1244, 1261, 1282, 1284, 1298, 1395, 1476, 1477, 1638, 1713, 1910, 2095, 2123, 2211, 2254, 2374, 2400, 2517, 2557, 2582, 2901, 3007, 3020, 4928, 22619, 22620, 22627, 22628, 22629, 22641, 22642, 22662, 22663, 22672, 22673, 22674, 22713, 22714, 22718, 22719, 22720, 22721, 22722, 22808, 22812, 22813, 22814, 22875, 22876, 22888, 22892, 22893, 22894, 22965, 22966, 22996, 22997, 23027, 23032, 23722, 23723, 23728, 24426, 25759, 25930, 26325, 26494, 26534, 26544, 26622, 27061, 27499, 27778, 27805, 28142, 28416, 28417, 28420, 29053, 29071, 29178, 29179, 29623, 29625, 29627, 29629, 30974, 31003, 31032, 31063, 31092, 31121, 31150, 31387, 36084, 36286, 36337, 36406, 36407, 36569, 36673, 36810, 39021, 39022, 39091, 39171, 39183, 39187, 39200, 39277, 39588, 39639, 39648, 39706, 39737, 39788, 40107, 40116, 40152, 40267, 40310, 40355, 40357, 40365, 40579, 40583, 40588, 40590, 40609, 40775, 40869, 40906, 43880, 44059, 45518}}], which are triggered after a command has been executed, and can be used to perform additional work (for [pre-commit{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={547, 1402, 1403, 1409, 1410, 1445, 1446, 1454, 1455}}] [listeners{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={547, 584, 617, 687, 885, 1244, 1261, 1282, 1284, 1298, 1395, 1476, 1477, 1638, 1713, 1910, 2095, 2123, 2211, 2254, 2374, 2400, 2517, 2557, 2582, 2901, 3007, 3020, 4928, 22619, 22620, 22627, 22628, 22629, 22641, 22642, 22662, 22663, 22672, 22673, 22674, 22713, 22714, 22718, 22719, 22720, 22721, 22722, 22808, 22812, 22813, 22814, 22875, 22876, 22888, 22892, 22893, 22894, 22965, 22966, 22996, 22997, 23027, 23032, 23722, 23723, 23728, 24426, 25759, 25930, 26325, 26494, 26534, 26544, 26622, 27061, 27499, 27778, 27805, 28142, 28416, 28417, 28420, 29053, 29071, 29178, 29179, 29623, 29625, 29627, 29629, 30974, 31003, 31032, 31063, 31092, 31121, 31150, 31387, 36084, 36286, 36337, 36406, 36407, 36569, 36673, 36810, 39021, 39022, 39091, 39171, 39183, 39187, 39200, 39277, 39588, 39639, 39648, 39706, 39737, 39788, 40107, 40116, 40152, 40267, 40310, 40355, 40357, 40365, 40579, 40583, 40588, 40590, 40609, 40775, 40869, 40906, 43880, 44059, 45518}}]) or to update external application data like UI state for [[post{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={367, 369, 370, 372, 373, 385, 492, 748, 1075, 1087, 1097, 1103, 1113, 1130, 1396, 1496, 1534, 1548, 2227, 5197, 5202,  5216, 5228, 16932, 19620, 19621, 19626, 19632, 19638, 21022, 21098, 21108, 21345, 21523, 21979, 21984, 22007, 22024, 22047, 22399, 22439, 23027, 23028, 23032, 23033, 24371, 25936, 25942, 26112, 26650, 32468, 36384, 36671, 36672, 36679, 39220, 39594, 40362, 40366, 40617}}]-commit{MW:/JavaConcepts-line={1396, 1496, 1534, 1548, 2227, 21108, 23027, 23028, 23032, 23033, 26650, 36384, 39220, 39594, 40362, 40366, 40617}}] listeners.

The [@Session.getTransactionalEditingDomain()@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={558, 1492}}] will return the [@TransactionalEditingDomain@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={517, 558, 699, 1392, 1492, 1895, 23089, 24010, 24712, 26458, 26460, 27538, 36178, 36183, 36327, 36379, 36413, 36438, 36716, 39028, 39123, 39195, 39217, 39761, 40273, 40274, 40311}}] for a session. 

To modify a [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] element with a [Transactional Editing Domain{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={517, 558, 699, 1392, 1492, 1895, 23089, 24010, 24712, 26458, 26460, 27538, 36178, 36183, 36327, 36379, 36413, 36438, 36716, 39028, 39123, 39195, 39217, 39761, 40273, 40274, 40311}}], you must use a [@RecordingCommand@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={26407->26409, 26410, 30708, 36092, 36167, 36258, 36271, 36275, 36277, 36279, 36281, 36331, 39062, 39140, 39161, 39162, 39198}}]. If you try to modify the models inside a session ([semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] or [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}]) outside the context of a recording command, you will get an exception. The proper usage pattern is:

bc. 
TransactionalEditingDomain ted = ...;
ted.getCommandStack().execute(myCommand);

where [@myCommand@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] is a [@RecordingCommand@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={26407->26409, 26410, 30708, 36092, 36167, 36258, 36271, 36275, 36277, 36279, 36281, 36331, 39062, 39140, 39161, 39162, 39198}}].

h3(#vp_selection). [Changing the [[Viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] Selection{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={670, 1170, 39492, 39528, 39534, 39552, 39559, 39726, 40240, 40813},MW:/EcoreConcepts-line={36}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39559, 39738, 39742,39525, 39527, 39558, 39738, 39742, 39525, 39527, 39558, 39742}}]

Each session has its own set of [viewpoints{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] enabled, which determine which [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] and extension are available. Users can change that selection using the _[[Viewpoint{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] Selection{MW:/JavaConcepts-line={670, 1170, 39492, 39528, 39534, 39552, 39559, 39726, 40240, 40813},MW:/EcoreConcepts-line={36}}]_ action (for example on a _Modeling [Project{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}]_). You can also change this selection programmatically.

The simplest way to do this is to use the [@UserSession@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39457, 39459->39470}}] API; for example:

bc. 
Session userSession = [[UserSession{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39457, 39459->39470}}].from(createdSession){MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39462}}}];
[userSession.selectViewpoint("Design"){MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39469}}}];

h2(#uisession). [Editing [Sessions{MW:/EcoreConcepts-line={91, 99, 100},MW:/JavaConcepts-line={TODO}}] {MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={2517, 39398, 39403, 39451->39454, 39476, 39609, 39665->39669, 39689, 40295}}]

An _editing sesssion_, represented by an instance of [@org.eclipse.sirius.ui.business.api.session.IEditingSession@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403}],  manages the [graphical{MW:/EcoreConcepts-line={144, 147, 328},MW:/JavaConcepts-line={3628, 3844, 3884, 4835, 14211, 14212, 14658, 14698, 16054, 16066, 16089, 16106, 16492, 19545, 19547, 19570, 21372, 21440, 21458, 21592, 21663, 21688, 22161, 22285, 22296, 22326, 22490, 22491, 22745, 23044, 23246, 23390, 23391, 23392, 23471, 24172, 24173, 24174, 24307, 24308, 25482, 252680, 25733, 25752, 26263, 26436, 26453, 26526, 27046, 27273, 27274, 27393, 27937, 31350}}] [editors{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={24148, 24149, 24703, 24953, 24957, 26907, 27277, 27510, 28398, 28507, 28508, 30842, 30941, 31396, 36033, 36037, 36054, 36078, 36081, 36103, 36324, 36376, 39059, 39068, 39193, 39298, 39362, 39405, 39612, 40053, 40065, 40066, 40257, 40258, 40285}}] associated to a session. A session can exist without an associated [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}], but some operations require that an [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}] is explicitly opened. At most one [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}] can exist for a given session.

To retrieve the [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}] associated to a session or create a new one, use the [@org.eclipse.sirius.ui.business.api.session.SessionUIManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39450}}]  API. The manager serves both as a [[factory{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={681, 684, 1357, 1391, 1415, 1417, 1617, 1618, 1624, 1626, 1773, 1894, 1897, 1909, 1915, 1920, 2015, 2097, 2218, 2220, 2321, 2383, 2396, 3016, 3037, 3042, 3051, 3197, 3234, 3350, 3365, 3366, 3440, 3710, 3728, 3751, 4975, 5205, 5207, 5307, 5308, 6219, 6298, 6306, 6320, 7071, 7073, 7077, 7134, 7140, 7172, 7177, 7178, 7198, 7226, 7228, 7260, 7360, 7398, 7494, 7501, 7502, 7547, 7733, 7756, 8499, 8520, 8521, 8868, 8886, 8969, 9821, 9902, 10145, 10171, 10172, 10204, 10431, 10455, 10572, 11426, 11568, 11856, 11886, 11887, 11958, 12044, 14518, 14565, 15172, 15174, 15202, 15344, 15373, 15432, 15464, 15736, 15788, 15789, 16060,...}}] for [editing [sessions{MW:/EcoreConcepts-line={91, 99, 100},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={2517, 39398, 39403, 39451->39454, 39476, 39609, 39665->39669, 39689, 40295}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39476}}] and as a [registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}] of all the ones which are opened at a given time and which session they correspond to.

The main services opened by an [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}] is to open, close, save, and generally manage the lifecycle of the Eclipse [editors{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={24148, 24149, 24703, 24953, 24957, 26907, 27277, 27510, 28398, 28507, 28508, 30842, 30941, 31396, 36033, 36037, 36054, 36078, 36081, 36103, 36324, 36376, 39059, 39068, 39193, 39298, 39362, 39405, 39612, 40053, 40065, 40066, 40257, 40258, 40285}}] associated with a session. Every time a [representation{MW:/EcoreConcepts-line={49, 53, 54, 55, 58, 62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] (e.g. a diagram) is opened on a [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}], it happens through the corresponding [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}].

You can use the [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}]'s APIs yourself to open [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}], check their dirty states, save them, etc. Refer to the [@EditingSession@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}] 's JavaDoc for details.

You can also register [@IEditingSessionListeners@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={}}] on an [editing session{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}], to be notified of state changes in the session, in particular when it becomes _dirty_, meaning that it contains unsaved changes.

h2(#model_accessor). The [[Model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] Accessor{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 948, 1475, 5416, 27503, 28050, 28064, 28099, 28133, 28134, 36437, 36713, 37135, 40269, 40270, 40304, 40305, 47262}}]

The [[semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] models{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] inside a session are never manipulated directly by Sirius. All access to these models is mediated through the session's [@ModelAccessor@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 948, 1475, 5416, 27503, 28050, 28064, 28098, 28133, 28134, 36437, 36713, 37135, 40269, 40270, 40304, 40305, 47262}}] instead of directly through the normal [EMF{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={506, 2753, 21121, 21915, 21917, 26301, 28191, 26048, 36606, 39064, 39395, 40394}}] reflective APIs. This accessor serves two purposes:
* It enables seamless extension (or restriction) of how the session views the [semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}]. For example a [model accessor{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 948, 1475, 5416, 27503, 28050, 28064, 28099, 28133, 28134, 36437, 36713, 37135, 40269, 40270, 40304, 40305, 47262}}] could give access to [virtual elements{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={27019}}] or properties, which do not exist "physically" inside the [semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}]; it could also decide to hide some parts of the [semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] to [viewpoint{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}].
* It allows the verification of any access or modification using the associated [@IPermissionAuthority@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={24960, 26443, 28104, 28147, 28167, 28168, 28169, 28172, 28263, 28285, 28286 28287, 28294, 28295, 28296, 28316, 36712}}] . The [permission authority{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={1513, 24960, 26443, 28104, 28147, 28167, 28168, 28169, 28172, 28248, 28263, 28265, 28285, 28286, 28287, 28294, 28295, 28296, 28300, 28315, 28316, 36712}}] is used to [lock [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] elements {MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={5668, 6336, 7772, 8035}}](both diagram and [semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] elements), and to check if you have read and/or write access to each element and feature before access or modification.

You can obtain the [[model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] accessor{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 948, 1475, 5416, 27503, 28050, 28064, 28099, 28133, 28134, 36437, 36713, 37135, 40269, 40270, 40304, 40305, 47262}}] associated to a session using the [@Session.[[getModelAccessor{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 1475, 27503, 28064, 28133, 28134, 37135}}](){MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 1475, 27503, 28064, 37135}}]@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546}}] method, and the [permission authority{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={1513, 24960, 26443, 28104, 28147, 28167, 28168, 28169, 28172, 28248, 28263, 28265, 28285, 28286, 28287, 28294, 28295, 28296, 28300, 28315, 28316, 36712}}] using [@[ModelAccessor{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 948, 1475, 5416, 27503, 28050, 28064, 28098, 28133, 28134, 36437, 36713, 37135, 40269, 40270, 40304, 40305, 47262}}].[[getPermissionAuthority{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={24960, 26443, 28104, 28167, 28618, 28619, 28285, 28286, 28287}}](){MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={24960, 26443, 28104}}]@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={28104}}] .  If you extend Sirius, you should make sure to uses the [[model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] accessor{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={546, 948, 1475, 5416, 27503, 28050, 28064, 28099, 28133, 28134, 36437, 36713, 37135, 40269, 40270, 40304, 40305, 47262}}] API to read and write the [semantic{MW:/EcoreConcepts-line={51, 59, 139, 327, 329, 471},MW:/JavaConcepts-line={TODO}}] [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}], and to use the [permission authority{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={1513, 24960, 26443, 28104, 28147, 28167, 28168, 28169, 28172, 28248, 28263, 28265, 28285, 28286, 28287, 28294, 28295, 28296, 28300, 28315, 28316, 36712}}] to check any change you want to perform beforehand.

h2(#dialects). [Dialects{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={131, 5310, 32446, 37044}}]

Sirius supports different kinds of [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}]: [diagrams{MW:/JavaConcepts-line={522, 1327, 2069, 2110, 3568, 3596, 3598, 3600, 3601, 3602, 3603, 3604, 3624, 3625, 3626, 3638, 3639, 3640},MW:/EcoreConcepts-line={119, 120, 121, 122, 139, 140, 143, 171, 182, 286, 326}}], [tables{MW:/EcoreConcepts-line={419, 420, 424, 425, 426, 451, 460, 461},MW:/JavaConcepts-line={TODO}}] and [trees{MW:/EcoreConcepts-line={469, 470, 473, 474, 475, 476, 477, 478, 485, 487},MW:/JavaConcepts-line={36875, 36901, 36914, 37064, 37164, 38789, 38980, 38981, 39072, 39132, 39262}}]. These are all [*Dialects*{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={131, 5310, 32446, 37044}}], which are supported by default by the platform. The core of the platform only deals with the [abstract notion of a dialect{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={131, 140, 5310, 32446, 37044}}], and each one is simply an extension.

The [@DialectManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={134, 135, 791}}]  ([@org.eclipse.sirius.business.api.dialect.DialectManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={134}}]) offers some general APIs which can be used to manipulate [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] in a uniform way, independently of which concrete dialect provides them. The [@DialectManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={134, 135, 791}}] can be used to:
* [create new [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={106, 107, 146, 789, 790, 5315, 5316, 32451, 37049}}];
* [synchronize [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={3616, 3623, 3770, 4133, 4305, 4544, 5201, 5204, 5205, 5206, 5207, 5306, 5307, 5309, 5408, 5412, 5421, 5438, 5441, 5467, 5469, 6230, 14274, 14265, 14287, 14584, 16102, 24286, 24342->24344, 24346, 24348, 24370, 24373, 24381->24383, 24397, 24398, 25969, 32302->32380, 32430, 32611, 32624, 33195, 33237, 33346, 33347, 33406, 35541, 35670, 35784, 35886, 35912, 36650, 36881, 36903, 36916, 36939, 36940, 36990, 37069, 37080,...}}];
* [delete [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={117, 155, 179, 180, 800, 5325, 40438->40440}}];
* find [existing [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39854}}].

The [@DialectManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={134, 135, 791}}] is a global object but the services it offers work on [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] inside [UserSession{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}], so all the methods it provides require a [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] object as argument.

In the same way as [UserSession{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] are split in a core [@Session@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] API and an [@EditingSession@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39403, 39452->39454, 39476, 39609, 39666->39669,  39675, 39689, 40295}}] API to handle UI-specific services, the [@DialectManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={134, 135, 791}}] is complemented with the [@DialectUIManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39312, 39313, 39569}}] ([@org.eclipse.sirius.ui.business.api.dialect.DialectUIManager@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={39312}}] ), which offers generic APIs to [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] services which depend on the UI. The main ones are:
* [opening and [closing [editors{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={24148, 24149, 24703, 24953, 24957, 26907, 27277, 27510, 28398, 28507, 28508, 30842, 30941, 31396, 36033, 36037, 36054, 36078, 36081, 36103, 36324, 36376, 39059, 39068, 39193, 39298, 39362, 39405, 39612, 40053, 40065, 40066, 40257, 40258, 40285}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={22337, 36028, 39007, 39337, 39417, 39418, 39580, 39628, 39629}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={22325, 36019, 38998, 39328, 39409, 39570}}];
* [exporting [representations{MW:/EcoreConcepts-line={62, 64, 65, 66},MW:/JavaConcepts-line={TODO}}] into external [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={25748, 25750, 35941, 35971, 36393, 36394, 39894}}] (e.g. images).

h2(#viewpoint_registry). The [[Viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] [Registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={32, 39, 58, 1152, 1213}}]

The [@ViewpointRegistry@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={32, 39, 58, 1152, 1213}}] is a global object which knows about all the [[viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] definitions{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={83, 1182, 1187}}] available in the system at every time.

When a plug-in containing properly packaged _VSMs_ is deployed, the [registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}] will be notified (through the [@org.eclipse.sirius.componentization@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={25->84, 1049, 4906->4954, 5252->5304, 5897}}] extension point) and register all the [viewpoints{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] defined in any of these _VSMs_. The [registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}] also listens to changes in the Eclipse workspace to detect the creation, modification and deletion of any [@*.odesign@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] [files{MW:/EcoreConcepts-line={76, 77, 104},MW:/JavaConcepts-line={TODO}}]; this is (part of) what enables dynamic development of VSMs, with no need for a costly deployment of plug-ins to test your changes: the latest version of a [[viewpoint{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] definition{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={83, 1182, 1187}}] from the workspace is always known from the [registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}].

You can use the [registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}] to discover about all the [[viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] definitions{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={83, 1182, 1187}}] which are available, and introspect the corresponding models. However be aware that the [[viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] [Registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}]{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={32, 39, 58, 1152, 1213}}] maintains its own editing domain and [EMF{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={506, 2753, 21121, 21915, 21917, 26301, 28191, 26048, 36606, 39064, 39395, 40394}}] [@ResourceSet@ {MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] in which the [viewpoints{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] are loaded. The [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}] loaded in the [registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}] are *not* the same as the ones loaded in a session that uses a given [viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}]. It is a different instance of the same [model{MW:/EcoreConcepts-line={33, 50, 69, 109, 274, 286, 289, 332},MW:/JavaConcepts-line={TODO}}]. This means you must be careful when comparing or passing around elements from a [[viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] definition{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={83, 1182, 1187}}]. For example if you have defined a [viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] named _A_, and have two different [sessions{MW:/EcoreConcepts-line={91, 99, 100},MW:/JavaConcepts-line={TODO}}]  where _A_ is enabled, you will have three equivalent but different instances of _A_: one in each of the [sessions{MW:/EcoreConcepts-line={91, 99, 100},MW:/JavaConcepts-line={TODO}}] ' [@ResourceSet@ {MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}], and one in the [@ViewpointRegistry@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={32, 39, 58, 1152, 1213}}] 's private [@ResourceSet@ {MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] .

You can register [listeners{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={547, 584, 617, 687, 885, 1244, 1261, 1282, 1284, 1298, 1395, 1476, 1477, 1638, 1713, 1910, 2095, 2123, 2211, 2254, 2374, 2400, 2517, 2557, 2582, 2901, 3007, 3020, 4928, 22619, 22620, 22627, 22628, 22629, 22641, 22642, 22662, 22663, 22672, 22673, 22674, 22713, 22714, 22718, 22719, 22720, 22721, 22722, 22808, 22812, 22813, 22814, 22875, 22876, 22888, 22892, 22893, 22894, 22965, 22966, 22996, 22997, 23027, 23032, 23722, 23723, 23728, 24426, 25759, 25930, 26325, 26494, 26534, 26544, 26622, 27061, 27499, 27778, 27805, 28142, 28416, 28417, 28420, 29053, 29071, 29178, 29179, 29623, 29625, 29627, 29629, 30974, 31003, 31032, 31063, 31092, 31121, 31150, 31387, 36084, 36286, 36337, 36406, 36407, 36569, 36673, 36810, 39021, 39022, 39091, 39171, 39183, 39187, 39200, 39277, 39588, 39639, 39648, 39706, 39737, 39788, 40107, 40116, 40152, 40267, 40310, 40355, 40357, 40365, 40579, 40583, 40588, 40590, 40609, 40775, 40869, 40906, 43880, 44059, 45518}}] on the [@ViewpointRegistry@{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={32, 39, 58, 1152, 1213}}] to be notified when [viewpoints{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] are [registered{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={36, 48, 62, 77, 1218, 1235, 1274}}], [unregistered{MW:/EcoreConcepts-line={},MW:/JavaConcepts-line={1546, 1597, 2242, 4959, 21161, 22637, 22689, 22742, 22825, 23005, 25755, 25756, 27391, 27392, 27401, 27402, 39402, 39647, 39653}}], or when the definition of a [viewpoint{MW:/EcoreConcepts-line={30, 67, 92},MW:/JavaConcepts-line={TODO}}] changes (for example because it was defined from an [@*.odesign@{MW:/EcoreConcepts-line={TODO},MW:/JavaConcepts-line={TODO}}] file in the workspace that you have just modified, and the [registry{MW:/EcoreConcepts-line={283},MW:/JavaConcepts-line={32, 58, 80, 879, 885, 1152, 1213, 1632, 1725, 1901, 2134, 2139, 2367, 2543, 2544, 2577, 3002, 3566, 3719, 4032, 4591, 4931, 4933, 4951, 4953, 4955, 4957, 5266, 5291, 5870, 5871, 14507, 22369, 24837, 25371, 25372, 26984, 26985, 27053, 27095, 27098, 27897, 28133, 28166, 28175, 28176, 28406, 28412, 28422, 28423, 28471, 28472, 28479, 30665, 36108, 36561, 39104, 39282, 39283, 39700, 40147, 40265, 40266, 40582, 40769, 41095, 41096}}] detected it and reloaded the new definition);
