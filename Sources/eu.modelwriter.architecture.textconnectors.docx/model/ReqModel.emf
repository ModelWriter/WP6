@namespace(uri="eu.modelwriter.architecture.textconnectors.docx.reqmodel", prefix="ReqModel")
package ReqModel;

@gmf.node(label = "name")
abstract class NamedElement {
  attr String Name;
}

@gmf.diagram
@gmf.node(label="Name")
class Product extends NamedElement {
   @gmf.compartment(collapsible="true")
  val Definition[*] OwnedDefinition;
}

abstract class Definition extends NamedElement {

}

@gmf.node(figure="rectangle", label.icon="false", label="Name", label.pattern="{0}", size="100,60")
class RequirementLevel extends Definition {
  @gmf.compartment(collapsible="true")
  val Definition[*] OwnedDefinition;
}

@gmf.node(figure="rectangle", label.icon="false", label="Name",  figure="rounded", label.pattern="{0}", size="20,20")
class Requirement extends Definition {
  attr String Id = "";
  attr String Description;
  @gmf.link(target.decoration="arrow", source.decoration="none", style="dash", color="0,0,0")
  ref Requirement Refine;
  @gmf.link(target.decoration="arrow", source.decoration="none", style="dash", color="0,0,0")
  ref Requirement DependencyTo;
  attr Priority PriorityType;
}

@gmf.node(label="Name", figure="ellipse")
class TextArea extends Definition {
  attr String Text = "";
}

enum Priority {
  Mandatory = 0;
  Optional = 1;
}

